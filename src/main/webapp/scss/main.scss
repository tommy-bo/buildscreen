$failBg: #EF2929;
$failContainerBg: rgba(255,0,0,0.7);
$unstableBg: #F57D1F;//#FCD116;
$stableBg: #1BD130;
$shade: rgba(0, 0, 0, 0.5);
$disconectedBg: #AAAAAA;
$browserPrefixes: "-webkit-", "-mozilla-", "-o-", "-ms-", "";

@mixin withBrowserSupport($property, $value) {
		@each $prefix in $browserPrefixes {
			#{$prefix}#{$property}: #{$value};
		}
}

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} { @content; }
	@keyframes #{$name} { @content; }
}

#header {
	display: none;
}

#side-panel {
	display: none;
}

#footer {
	display: none;
}

body, .mainDisplay {
	font-family: Sans-serif;
}

#disconnectedOverlay {
	background-color: $disconectedBg;
	opacity: 0;
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
}

#disconnectedOverlay.disconnected {
	@include withBrowserSupport(transition, 30s);
	top: 0;
	opacity: 0.7;
}

#breadcrumbBar, #footer-container {
    display: none;
}

.mainDisplay { 
	bottom: 0;
	left: 0;
	position: fixed;
	right: 0;
	top: 0;
	overflow: hidden;
}

.content {
	bottom: 0;
	left: 0;
	position: absolute;
	right: 0;
	top: 3.2em;
}

#menu {
	z-index: 1;
	opacity: 0.4;
	background: white;
	border-radius: 0 0 0 1em;
	right: 0;
	top: 0;
	position: absolute;
	padding: 0.5em;
	@include withBrowserSupport(transition, 2s);
}

#menu:hover {
	opacity: 1;
	@include withBrowserSupport(transition, 2s);
}

.head {
	background: #1BD130;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	height: 3.2em;
	@include withBrowserSupport(transition, background 3s);
}

.FAILED .head {
	background: #EF2929;
	@include withBrowserSupport(transition, background 3s);
}

.timeSinceStatusChange {
	height: 100%;
	padding: 0.4em 0 0;
	text-align: center;
	text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
}

h1 {
	margin: 0;
	font-size: 19pt;
	font-weight: normal;
}

h2 {
    line-height: 1.3em;
    margin: .5em 0 0 0;
    padding: .2em;
}

.head div {
	background-color: rgba(0, 0, 0, 0.7);
	color: white;
}

.timestamp {
	font-style: italic;
	font-weight: bold;
}

.failureContainer {
	bottom: 0;
	left: 0;
	position: absolute;
	overflow-x: hidden;
	overflow-y: auto;
	right: 0;
	text-align: center;
	height: 0;
	@include withBrowserSupport(transition, height 3s);
	font-size: 26pt;
	background-color: $failBg;

	ul {
		list-style: none inside none;
		padding: 0;
		margin: 0;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
	}

	li {
        padding: 0.5em;
        position: relative;
        flex-grow: 1;
        background-color: $failContainerBg;
        margin: .1em;
        display: flex;
        flex-direction: column;
        box-shadow: 1px 1px 3px $shade;
	}

	a {
		color: inherit;
		text-decoration: none;
	}
}

.FAILED .failureContainer, .UNSTABLE .failureContainer {
	height: 100%;
	@include withBrowserSupport(transition, 3s);
}

hr {
	border: none;
	border-bottom: 1px dashed;
	color: black;
	margin: 0;
}

ul.UNSTABLE h2 {
	background-color: mix(rgba(0,0,0,0.4), mix($failBg, $unstableBg));
}

ul.FAILED.claimed h2 {
	color: #fc6105;
}

ul.UNSTABLE.claimed h2 {
	color: #cccc00;
}

.queued {
	@include withBrowserSupport(animation, queued 5s infinite alternate ease-in-out);
}

@include keyframes(queued) {
	from {
		@include withBrowserSupport(text-shadow, 0px 0px 0px #FF0000);
	}
	to {
		@include withBrowserSupport(text-shadow, "2px 2px 5px #3465A4, 2px -2px 5px #3465A4, -2px -2px 5px #3465A4, -2px 2px 5px #3465A4");
	}
}

.building {
	@include withBrowserSupport(animation, building 5s infinite alternate ease-in-out);
}

@include keyframes(building) {
	from {color: inherit;}
	to {color: #3465A4;}
}

.lastSuccess {
	color: rgba(0, 0, 0, 0.5);
	font-size: 15pt;
	position: absolute;
	right: 0;
	margin-right: 1em;
	top: 0;
}

.description {
    font-style: italic;
    font-size: 20pt;
}

.culprits {
}

.claimedBy {
	display: block;
	font-size: 20pt;
	font-style: italic;
	margin-left: auto;
	margin-right: auto;
	width: 65%;
}	

#rotating-view-container {
	bottom: 0;
	left: 0;
	position: absolute;
	right: 0;
	top: 0;
}

.pageView {
	height: 100%;
	width: 100%;
	opacity: 0;
	position: absolute;
	@include withBrowserSupport(transition, opacity 5s linear);
	/*display: none;*/
}

.pageView object {
	height: 100%;
	width: 100%;
}

.visible {
	opacity: 1;
	@include withBrowserSupport(transition, opacity 5s linear);
	/*display: block;*/
}
